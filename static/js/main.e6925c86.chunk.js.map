{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["Tokenizer","text","toLowerCase","replace","split","map","t","trim","filter","length","Lemmatizer","lemmaMapping","this","tokens","token","hasOwnProperty","Fractionator","wordFrequency","Object","fromEntries","word","idx","words","catagories","unGroupedDistillates","Math","min","c","toString","result","concat","category","distillate","forEach","find","r","undefined","includes","push","d","getIndexWithDefault","sort","a","b","i18n","languageMapping","language","navigator","multilanguage","RequestForInput","setStage","setInput","Fragment","className","href","type","onClick","demoText","RequestForText","getInput","style","height","window","innerHeight","placeholder","value","onChange","e","target","RequestForFile","props","inputFileRef","handleSubmit","bind","React","createRef","event","input","current","files","fileReader","FileReader","onload","readAsText","preventDefault","onSubmit","accept","ref","Component","ResultDisplay","tokenize","lemmas","lemmatize","display","fractionate","flatMap","key","join","reverse","App","state","stage","setState","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","fetch","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e6925c86.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport lemmaMapping from './lemma_mapping.json'\nimport wordFrequency from './word_frequency.json'\nimport demoText from './a_farewell_to_arms.json'\n\nclass Tokenizer {\n  tokenize(text: string): string[] {\n    return text\n      .toLowerCase()\n      .replace(/n't/g, \"\")\n      .split(/[^a-zA-Z-]/)\n      .map(t => t.trim())\n      .filter(t => t.length > 2)\n      .filter(t => t !== \"-\")\n  }\n}\n\nclass Lemmatizer {\n  lemmaMapping: { [key: string]: string }\n  constructor() {\n    this.lemmaMapping = lemmaMapping;\n\n  }\n  lemmatize(tokens: string[]): string[] {\n    return tokens.map(token => {\n      if (this.lemmaMapping.hasOwnProperty(token)) {\n        return this.lemmaMapping[token];\n      }\n      else {\n        return token;\n      }\n    })\n  }\n}\n\ninterface Distillate {\n  category: string;\n  distillate: string[]\n}\n\nclass Fractionator {\n  wordFrequency: { [w: string]: number } = Object.fromEntries(wordFrequency.map((word, idx) => [word, idx + 1]))\n  fractionate(words: string[]): Distillate[] {\n    const catagories: number[] = [800, 1600, 3200, 6400, 12800, 25600, 51200, 102400]\n    const unGroupedDistillates: [string, string][] = words.map(word => {\n      if (this.wordFrequency.hasOwnProperty(word)) {\n        return [word, Math.min(...catagories.filter(c => c > this.wordFrequency[word])).toString()];\n      } else {\n        return [word, \"Unknown\"];\n      }\n    });\n    const result: Distillate[] = (catagories.map(c => c.toString()).concat([\"Unknown\"])).map(\n      c => {\n        const r: { category: string, distillate: string[] } = { category: c, distillate: [] };\n        return r;\n      }\n    );\n    unGroupedDistillates.forEach(distillate => {\n      const c = result.find(r => r.category === distillate[1]);\n      if (c !== undefined && !c.distillate.includes(distillate[0])) {\n        c.distillate.push(distillate[0]);\n      }\n    });\n    result.forEach(d => {\n      if (d.category !== \"Unknown\") {\n        const getIndexWithDefault: (word: string) => number = (word) => {\n          if (this.wordFrequency.hasOwnProperty(word)) {\n            return this.wordFrequency[word];\n          } else {\n            return 0;\n          }\n        }\n        d.distillate.sort((a, b) => getIndexWithDefault(b) - getIndexWithDefault(a));\n      }\n    })\n    return result;\n  }\n}\n\nfunction i18n(text: string | { [language: string]: string }): string {\n  const translate: { [t: string]: { [l: string]: string } } = {\n    \"Paste Text\": { \"zh-CN\": \"粘贴文本\", \"zh-TW\": \"粘貼文本\" },\n    \"Choose File\": { \"zh-CN\": \"选择文件\", \"zh-TW\": \"選擇文件\" },\n    \"Fractionate\": { \"zh-CN\": \"分馏\", \"zh-TW\": \"分餾\" },\n    \"Demo\": { \"zh-CN\": \"演示\", \"zh-TW\": \"演示\" },\n    \"Paste Text Here\": { \"zh-CN\": \"在这里粘贴文本\", \"zh-TW\": \"在這裡粘貼文本\" },\n    \"Return\": { \"zh-CN\": \"返回\", \"zh-TW\": \"返回\" }\n  };\n  const languageMapping: { [alias: string]: string } = {\n    \"en\": \"en-US\", \"zh\": \"zh-CN\",\n    \"zh-cn\": \"zh-CN\", \"zh-tw\": \"zh-TW\", \n    \"zh-HK\": \"zh-TW\", \"zh-hk\": \"zh-TW\"\n  };\n  let language = navigator.language;\n  if (languageMapping.hasOwnProperty(language)) {\n    language = languageMapping[language];\n  }\n  if (typeof text === \"string\") {\n    if (language !== \"en-US\") {\n      const multilanguage = translate[text];\n      if (multilanguage.hasOwnProperty(language)) {\n        return multilanguage[language];\n      } else {\n        return text;\n      }\n    }\n    else {\n      return text\n    }\n  } else {\n    if (text.hasOwnProperty(language)) {\n      return text[language];\n    } else {\n      return text[\"en-US\"]\n    }\n  }\n}\n\ninterface GeneralAppComponentProps {\n  setStage: (stage: AppStage) => void;\n  setInput: (input: string) => void\n}\n\ninterface FullAccessAppComponentProps {\n  setStage: (stage: AppStage) => void;\n  setInput: (input: string) => void\n  getInput: () => string;\n}\n\nconst RequestForInput: React.FunctionComponent<GeneralAppComponentProps> = ({ setStage, setInput }) =>\n  <React.Fragment>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"mb-1\">\n          {i18n({\n            \"en-US\": \"Fractionator is an English learning tool for English language learners. Fractionator can create a word list sorted from least common words to most common words form input text so you can learn the vocabulary of a book or a movie ahead without spoilers and have a not-interrupted-by-dictionary reading or watching experiments.\",\n            \"zh-CN\": \"分馏器·Fractionator 是一个为英语学习者提供的英语学习工具。分馏器·Fractionator 可以从输入的文本中提取出一个按照词频从最不常见到最常见的单词表。这样你就可以在不被剧透的情况下提前学习所有的词汇，获得一个不被查字典打扰的阅读或观看体验。\",\n            \"zh-TW\": \"分餾器·Fractionator 是一個為英語學習者提供的英語學習工具。分餾器·Fractionator 可以從輸入的文本中提取出一個按照詞頻從最不常見到最常見的單詞表。這樣你就可以在不被劇透的情況下提前學習所有的詞彙，獲得一個不被查字典打擾的閱讀或觀看體驗。\"\n          })}\n        </p>\n        <p className=\"mb-1\">\n          {i18n({\n            \"en-US\": \"To use Fractionator, click [Paste Text] button, then paste your input text or click [Choose File] button, choose a text file (.txt), or a subtitle file (.srt). Finally, click [Fractionate] button to fractionating result. Try It now by clicking the [Demo] button to fractionate some example text. \",\n            \"zh-CN\": \"点击【粘贴文本】按钮，然后黏贴想要分馏的文本，或者点击【选择文件】按钮，选择一个文本文档（.txt）或字幕文档（.srt）来开始使用分馏器·Fractionator。当输入好文字或选择好文件时，点击【分馏】按钮来查看分馏的结果。点击【演示】按钮用预设的样本文本来试一试分馏器·Fractionator 的效果。\",\n            \"zh-TW\": \"點擊【粘貼文本】按鈕，然後黏貼想要分餾的文本，或者點擊【選擇文件】按鈕，選擇一個文本文檔（.txt）或字幕文檔（.srt）來開始使用分餾器·Fractionator。當輸入好文字或選擇好文件時，點擊【分餾】按鈕來查看分餾的結果。點擊【演示】按鈕用預設的樣本文本來試一試分餾器·Fractionator 的效果。\"\n          })}\n        </p>\n        <p className=\"mb-1\">\n          {i18n({\n            \"en-US\": \"Fractionator is free software, all text is processed locally on your browser without been uploaded to any servers. For more information, visit the project \",\n            \"zh-CN\": \"分馏器·Fractionator 是一个自由软件，所有的文字处理都是在浏览器本地进行的，你所输入的任何的内容都不会被上传。更多信息请访问\",\n            \"zh-TW\": \"分餾器·Fractionator 是一個自由軟件，所有的文字處理都是在瀏覽器本地進行的，你所輸入的任何的內容都不會被上傳。更多信息請訪問\"\n          })}\n          <a href=\"https://github.com/tetrau/fractionator\">\n            {i18n({\n              \"en-US\": \"homepage\",\n              \"zh-CN\": \"项目主页\",\n              \"zh-TW\": \"項目主頁\"\n            })}\n          </a>\n        </p>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForText\"); setInput(demoText) }}>{i18n(\"Demo\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setStage(\"RequestForText\")}>{i18n(\"Paste Text\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setStage(\"RequestForFile\")}>{i18n(\"Choose File\")}</button>\n      </div>\n    </div>\n  </React.Fragment>\nconst RequestForText: React.FunctionComponent<FullAccessAppComponentProps> = ({ setStage, getInput, setInput }) =>\n  <React.Fragment>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <textarea style={{ height: window.innerHeight * 0.5 }} className=\"form-control mb-1\" placeholder={i18n(\"Paste Text Here\")} value={getInput()} onChange={e => setInput(e.target.value)} ></textarea>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForInput\"); setInput(\"\") }}>{i18n(\"Return\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForFile\"); setInput(\"\") }}>{i18n(\"Choose File\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => setStage(\"ResultDisplay\")}>{i18n(\"Fractionate\")}</button>\n      </div>\n    </div>\n  </React.Fragment>\n\nclass RequestForFile extends React.Component<GeneralAppComponentProps, {}> {\n  inputFileRef: React.RefObject<HTMLInputElement>\n  constructor(props: GeneralAppComponentProps) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.inputFileRef = React.createRef();\n  }\n\n  handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n    const input = this.inputFileRef.current;\n    if (input && input.files !== null) {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const result = fileReader.result;\n        if (typeof result === \"string\") {\n          this.props.setInput(result)\n        }\n      }\n      fileReader.readAsText(input.files[0]);\n      this.props.setStage(\"ResultDisplay\");\n    }\n    event.preventDefault();\n  }\n\n  render() {\n    return <div className=\"row\">\n      <div className=\"col-12\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-12 d-flex justify-content-center\">\n              <div className=\"form-group\">\n                <input type=\"file\" className=\"form-control-file\" accept=\".txt,.srt\" ref={this.inputFileRef} />\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 d-flex justify-content-center\">\n              <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { this.props.setStage(\"RequestForInput\"); this.props.setInput(\"\") }}>{i18n(\"Return\")}</button>\n              <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { this.props.setStage(\"RequestForText\"); this.props.setInput(\"\") }}>{i18n(\"Paste Text\")}</button>\n              <input className=\"btn btn-outline-danger\" type=\"submit\" value={i18n(\"Fractionate\")} />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  }\n}\n\n\nconst ResultDisplay: React.FunctionComponent<FullAccessAppComponentProps> = ({ setStage, getInput, setInput }) => {\n  const tokens = new Tokenizer().tokenize(getInput());\n  const lemmas = new Lemmatizer().lemmatize(tokens);\n  const distillates = new Fractionator().fractionate(lemmas);\n  const display = distillates.flatMap(\n    ({ category, distillate }) => {\n      if (distillate.length === 0) {\n        return []\n      } else {\n        return [\n          <p className=\"text-center\" key={`distillate-${category}`}>{distillate.join(\" \")}</p>,\n          <div className=\"separator\" key={`separator-${category}`}>{category}</div>\n        ]\n      }\n    }\n  ).reverse()\n  return <React.Fragment>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        {display}\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForInput\"); setInput(\"\") }}>{i18n(\"Return\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForText\"); setInput(\"\") }}>{i18n(\"Paste Text\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForFile\"); setInput(\"\") }}>{i18n(\"Choose File\")}</button>\n      </div>\n    </div>\n  </React.Fragment>\n}\n\ntype AppStage = \"RequestForInput\" | \"RequestForText\" | \"ResultDisplay\" | \"RequestForFile\"\n\ninterface AppState {\n  stage: AppStage;\n  input: string\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      stage: \"RequestForInput\",\n      input: \"\"\n    };\n    this.setStage = this.setStage.bind(this);\n    this.setInput = this.setInput.bind(this);\n    this.getInput = this.getInput.bind(this);\n  }\n\n  setStage(stage: AppStage): void {\n    this.setState({ \"stage\": stage });\n  }\n\n  setInput(input: string): void {\n    this.setState({ \"input\": input });\n  }\n\n  getInput(): string {\n    return this.state.input;\n  }\n\n  render() {\n    return <div className=\"d-flex align-items-center min-vh-100\">\n      <div className=\"container\">\n        {this.state.stage === \"RequestForInput\" && <RequestForInput setStage={this.setStage} setInput={this.setInput} />}\n        {this.state.stage === \"RequestForText\" && <RequestForText setStage={this.setStage} getInput={this.getInput} setInput={this.setInput} />}\n        {this.state.stage === \"ResultDisplay\" && <ResultDisplay setStage={this.setStage} getInput={this.getInput} setInput={this.setInput} />}\n        {this.state.stage === \"RequestForFile\" && <RequestForFile setStage={this.setStage} setInput={this.setInput} />}\n      </div>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfetch(\"https://utils.tetrau.io/fractionator_page_view_counter\");\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}