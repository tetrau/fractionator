{"version":3,"sources":["pdf_extractor.js","file_text_extractor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["pdfjsLib","workerSrc","process","PDFExtractor","pdf","this","rawPdf","data","getPdf","bind","numPages","getPageIndexFromOutlineItem","extractOutline","extractOnePage","promise","_pdfInfo","outlineItem","dest","getDestination","ref","getPageIndex","getOutline","outline","depth2Outline","flatMap","o1","depth","concat","items","map","o2","title","Promise","all","o","idx","a","pageIndex","simplifiedOutline","calculateChapter","outlineInput","length","i","result","depth1Result","filter","correcttedDepth1Result","correctResult","sort","b","getPage","page","getTextContent","pageTextContent","str","join","FileTextExtractor","TextFileTextExtractor","file","callback","fileReader","FileReader","onload","readAsText","PDFFileTextExtractor","fromPage","toPage","ArrayBuffer","pdfExtractor","readAsArrayBuffer","openPDFFile","Array","from","v","k","p","then","pages","TextFileTextExtractorController","setExtractor","PDFFileTextExtractorController","props","state","pdfInfo","pageRange","pageRangeSafe","chapterSelectedIdx","badFile","updateToSafePageRange","readPDF","prevProps","setState","outlineAndNumPage","safeFromPage","Math","max","min","safeToPage","className","type","placeholder","value","onBlur","onChange","event","updatePageRange","parseInt","target","chapter","console","log","key","React","Component","lemmaMapping","Object","fromEntries","compactLemmaMapping","split","wordFormsLine","splitedWordFormsLine","word","f","includes","wordFrequency","compactWordFrequency","Tokenizer","text","toLowerCase","replace","t","trim","Lemmatizer","tokens","token","hasOwnProperty","Fractionator","words","catagories","unGroupedDistillates","c","toString","category","distillate","forEach","find","r","undefined","push","d","getIndexWithDefault","Internationalization","translation","getLanugage","i18n","languageMapping","language","navigator","multilanguage","RequestForInput","setStage","setInput","Fragment","href","onClick","demoText","RequestForText","getInput","style","height","window","innerHeight","e","RequestForFile","inputFileRef","extractor","handleFileChoosed","gotoResultDisplay","createRef","input","current","files","extract","accept","name","endsWith","WordDisplay","translate","handleDoubleClick","onDoubleClick","meaning","Dictionary","dict","dictionary","define","DictionaryLibrary","dictionaryURLs","updateDictionaryLibraryStatusFunc","dictionaryLibrary","selected","updateDictionaryLibraryStatus","status","url","downloadDictionary","dictionaryLibraryStatus","select","dls","dictionaryStatus","lang","thisDictionary","fetch","response","json","catch","error","ResultDisplay","tokenize","lemmas","lemmatize","display","fractionate","neverTranslate","getDictionary","reverse","unselect","dictionaryName","DoubleClickDefineOption","App","newDictionaryLibraryStatus","dictionaryLanguage","stage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f8a86f8c.chunk.js","sourcesContent":["import * as pdfjsLib from \"pdfjs-dist/es5/build/pdf.js\"\n\npdfjsLib.GlobalWorkerOptions.workerSrc = process.env.PUBLIC_URL + \"/pdf.worker.min.js\"\n\nexport class PDFExtractor {\n    constructor(pdf) {\n        this.rawPdf = { data: pdf };\n        this.pdf = null;\n        this.getPdf = this.getPdf.bind(this);\n        this.numPages = this.numPages.bind(this);\n        this.getPageIndexFromOutlineItem = this.getPageIndexFromOutlineItem.bind(this);\n        this.extractOutline = this.extractOutline.bind(this);\n        this.extractOnePage = this.extractOnePage.bind(this);\n    }\n\n    async getPdf() {\n        if (this.pdf === null) {\n            this.pdf = await pdfjsLib.getDocument(this.rawPdf).promise;\n        }\n        return this.pdf\n    }\n\n    async numPages() {\n        return (await this.getPdf())._pdfInfo.numPages;\n    }\n\n    async getPageIndexFromOutlineItem(outlineItem) {\n        const pdf = await this.getPdf();\n        let dest = outlineItem.dest;\n        let ref\n        if (typeof outlineItem.dest === \"string\") {\n            ref = (await pdf.getDestination(outlineItem.dest))[0];\n        } else {\n            ref = dest[0];\n        }\n        return await pdf.getPageIndex(ref);\n    }\n\n    async extractOutline() {\n        const pdf = await this.getPdf();\n        const outline = await pdf.getOutline();\n        if (outline === null) {\n            return [];\n        }\n        const depth2Outline = outline.flatMap(o1 => {\n            o1.depth = 1\n            return [o1].concat(\n                o1.items.map(o2 => {\n                    o2.title = `${o1.title} / ${o2.title}`;\n                    o2.depth = 2;\n                    return o2\n                })\n            )\n        });\n        const simplifiedOutline = await Promise.all(\n            depth2Outline.map(async (o, idx) => ({\n                title: o.title,\n                idx: idx,\n                pageIndex: await this.getPageIndexFromOutlineItem(o),\n                depth: o.depth\n            }))\n        );\n        const calculateChapter = async (outlineInput) => {\n\n            const length = outlineInput.length;\n            return await Promise.all(outlineInput.map(async (o, i) => {\n                if (i === length - 1) {\n                    const numPages = (await this.numPages()) - o.pageIndex;\n                    return {\n                        title: o.title,\n                        pageIndex: o.pageIndex,\n                        numPages: numPages === 0 ? 1 : numPages,\n                        idx: o.idx,\n                        depth: o.depth\n                    }\n                } else {\n                    const numPages = outlineInput[i + 1].pageIndex - o.pageIndex;\n                    return {\n                        title: o.title,\n                        pageIndex: o.pageIndex,\n                        numPages: numPages === 0 ? 1 : numPages,\n                        idx: o.idx,\n                        depth: o.depth\n                    }\n                }\n            }))\n        }\n        const result = await calculateChapter(simplifiedOutline);\n        const depth1Result = result.filter(o => o.depth === 1);\n        const correcttedDepth1Result = await calculateChapter(depth1Result);\n        const correctResult = result.filter(o => o.depth === 2).concat(correcttedDepth1Result)\n        correctResult.sort((a, b) => a.idx - b.idx);\n        return correctResult;\n    }\n\n\n\n    async extractOnePage(pageIndex) {\n        const pdf = await this.getPdf();\n        const page = await pdf.getPage(pageIndex + 1);\n        const pageTextContent = await page.getTextContent();\n        return pageTextContent.items.map(i => i.str).join(\" \")\n    }\n}\n\n","import { PDFExtractor, Chapter } from \"./pdf_extractor\";\nimport React from 'react';\n\nexport abstract class FileTextExtractor {\n    abstract extract(callback: (text: string | null) => void): void\n}\n\nexport class TextFileTextExtractor extends FileTextExtractor {\n    file: File\n    constructor(file: File) {\n        super();\n        this.file = file;\n    }\n\n    extract(callback: (text: string | null) => void): void {\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            const result = fileReader.result;\n            if (typeof result === \"string\") {\n                callback(result);\n            } else {\n                callback(null);\n            }\n        }\n        fileReader.readAsText(this.file);\n    }\n}\n\nexport class PDFFileTextExtractor extends FileTextExtractor {\n    file: File\n    fromPage: number\n    toPage: number\n\n    constructor(file: File, fromPage: number, toPage: number) {\n        super();\n        this.file = file;\n        this.fromPage = fromPage;\n        this.toPage = toPage;\n    }\n\n    openPDFFile(callback: (pdf: PDFExtractor | null) => any) {\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            const result = fileReader.result;\n            if (result instanceof ArrayBuffer) {\n                const pdfExtractor = new PDFExtractor(result);\n                callback(pdfExtractor);\n            } else {\n                callback(null);\n            }\n        }\n        fileReader.readAsArrayBuffer(this.file);\n\n    }\n\n    extract(callback: (text: string | null) => void): void {\n        this.openPDFFile(pdfExtractor => {\n            if (pdfExtractor === null) {\n                callback(null);\n            } else {\n                Promise.all(\n                    Array.from({ length: this.toPage - (this.fromPage - 1) }, (v, k) => k + this.fromPage - 1)\n                        .map(p => pdfExtractor.extractOnePage(p)))\n                    .then(pages => callback(pages.join(\" \")))\n            }\n        })\n    }\n}\n\ninterface ExtractorControllerProps {\n    file: File\n    setExtractor: (extractor: FileTextExtractor) => void\n}\n\nexport const TextFileTextExtractorController: React.FunctionComponent<ExtractorControllerProps> = ({ file, setExtractor }) => {\n    setExtractor(new TextFileTextExtractor(file))\n    return null;\n}\n\ninterface PDFInfo {\n    outline: Chapter[]\n    numPages: number\n}\n\nexport class PDFFileTextExtractorController extends React.Component<ExtractorControllerProps, {\n    pdfInfo: PDFInfo | null,\n    pageRange: [number, number] | null,\n    pageRangeSafe: [number, number] | null,\n    badFile: boolean,\n    chapterSelectedIdx: number | null\n}>  {\n    constructor(props: ExtractorControllerProps) {\n        super(props);\n        this.state = {\n            pdfInfo: null,\n            pageRange: null,\n            pageRangeSafe: null,\n            chapterSelectedIdx: null,\n            badFile: false\n        };\n        this.updateToSafePageRange = this.updateToSafePageRange.bind(this);\n    }\n\n    componentDidMount() {\n        this.readPDF();\n    }\n    componentDidUpdate(prevProps: ExtractorControllerProps) {\n        if (prevProps.file !== this.props.file) {\n            this.readPDF();\n        }\n    }\n    readPDF() {\n        new PDFFileTextExtractor(this.props.file, 0, 0).openPDFFile(pdfExtractor => {\n            if (pdfExtractor === null) {\n                this.setState({ badFile: true })\n            } else {\n                Promise.all([\n                    pdfExtractor.extractOutline(),\n                    pdfExtractor.numPages()\n                ]).then(outlineAndNumPage => {\n                    this.setState({\n                        pdfInfo: { outline: outlineAndNumPage[0], numPages: outlineAndNumPage[1] },\n                        pageRange: [1, outlineAndNumPage[1]]\n                    })\n                    this.props.setExtractor(new PDFFileTextExtractor(this.props.file, 1, outlineAndNumPage[1]))\n                })\n            }\n        })\n    }\n\n    updatePageRange(fromPage: number, toPage: number): void {\n        if (this.state.pdfInfo !== null) {\n            const safeFromPage = Math.max(1, Math.min(fromPage, this.state.pdfInfo.numPages))\n            const safeToPage = Math.min(this.state.pdfInfo.numPages, Math.max(fromPage, toPage))\n            this.setState({\n                pageRange: [fromPage, toPage],\n                pageRangeSafe: [safeFromPage, safeToPage]\n            });\n            this.props.setExtractor(new PDFFileTextExtractor(this.props.file, safeFromPage, safeToPage));\n        }\n    }\n\n    updateToSafePageRange() {\n        if (this.state.pageRangeSafe !== null) {\n            this.setState({ pageRange: this.state.pageRangeSafe });\n        }\n    }\n\n    render() {\n        if (this.state.badFile) {\n            return <p>Bad PDF FILE</p>\n        } else if (this.state.pdfInfo === null && !this.state.badFile) {\n            return <p>LOADING PDF FILE</p>\n        } else if (this.state.pageRange !== null && this.state.pdfInfo !== null) {\n            return <div className=\"row mt-1\">\n                <div className=\"col-2 pl-0 pr-1\">\n                    <div className=\"form-group\">\n                        <label className=\"mb-1 ml-1 small text-nowrap\">\n                                Page From\n                        </label>\n                        <input type=\"number\" className=\"form-control\" placeholder=\"Page From\" value={this.state.pageRange[0]}\n                            onBlur={this.updateToSafePageRange}\n                            onChange={event => { this.state.pageRange !== null && this.updatePageRange(parseInt(event.target.value), this.state.pageRange[1]) }} />\n                    </div>\n                </div>\n                <div className=\"col-2 pl-0 pr-1\">\n                    <div className=\"form-group\">\n                        <label className=\"mb-1 ml-1 small text-nowrap\">\n                                Page To\n                        </label>\n                        <input type=\"number\" className=\"form-control\" placeholder=\"Page To\" value={this.state.pageRange[1]}\n                            onBlur={this.updateToSafePageRange}\n                            onChange={event => { this.state.pageRange !== null && this.updatePageRange(this.state.pageRange[0], parseInt(event.target.value)) }} />\n                    </div>\n                </div>\n                <div className=\"col-8 pl-0 pr-0\">\n                    <div className=\"form-group\">\n                        <label className=\"mb-1 ml-1 small text-nowrap\">\n                                Chapter\n                        </label>\n                        <select className=\"form-control\" value={this.state.chapterSelectedIdx === null ? -1 : this.state.chapterSelectedIdx} onChange={event => {\n                            const value: number = parseInt(event.target.value);\n                            if (value === -1) {\n                                this.setState({\n                                    chapterSelectedIdx: null\n                                })\n                            } else if (this.state.pdfInfo !== null) {\n                                const chapter = this.state.pdfInfo.outline[value];\n                                this.setState(\n                                    {\n                                        chapterSelectedIdx: value,\n                                    }\n                                );\n                                console.log(chapter);\n                                this.updatePageRange(chapter.pageIndex + 1, chapter.pageIndex + 1 + chapter.numPages - 1);\n                            }\n                        }}>\n                            {this.state.pdfInfo.outline.length === 0 && <option value={-1}>No Table Of Contents</option>}\n                            {this.state.pdfInfo.outline.length > 0 && <option value={-1}>Select Chapter</option>}\n                            {this.state.pdfInfo.outline.map((chapter, idx) => {\n                                return <option key={idx} value={idx}>{chapter.title}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n            </div >\n        }\n    }\n\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport compactLemmaMapping from './compact_lemma_mapping.json'\nimport compactWordFrequency from './compact_word_frequency.json'\nimport demoText from './a_farewell_to_arms.json'\nimport './file_text_extractor';\nimport { PDFFileTextExtractorController, FileTextExtractor, TextFileTextExtractorController } from './file_text_extractor';\n\nconst lemmaMapping: { [word: string]: string } = Object.fromEntries(\n  compactLemmaMapping.split(\";\").flatMap(\n    wordFormsLine => {\n      const splitedWordFormsLine = wordFormsLine.split(\":\");\n      const word = splitedWordFormsLine[0];\n      const forms = splitedWordFormsLine[1].split(\",\");\n      return forms.map(f => {\n        const compactForm = [\"ing\", \"ed\", \"s\", \"es\", \"er\", \"est\"];\n        if (compactForm.includes(f)) {\n          return [word + f, word];\n        } else {\n          return [f, word];\n        }\n      });\n    }\n  )\n)\n\nconst wordFrequency: string[] = compactWordFrequency.split(\";\");\n\nclass Tokenizer {\n  tokenize(text: string): string[] {\n    return text\n      .toLowerCase()\n      .replace(/n't/g, \"\")\n      .split(/[^a-zA-Z-]/)\n      .map(t => t.trim())\n      .filter(t => t.length > 2)\n      .filter(t => t !== \"-\")\n  }\n}\n\nclass Lemmatizer {\n  lemmaMapping: { [key: string]: string }\n  constructor() {\n    this.lemmaMapping = lemmaMapping;\n\n  }\n  lemmatize(tokens: string[]): string[] {\n    return tokens.map(token => {\n      if (this.lemmaMapping.hasOwnProperty(token)) {\n        return this.lemmaMapping[token];\n      }\n      else {\n        return token;\n      }\n    })\n  }\n}\n\ninterface Distillate {\n  category: string;\n  distillate: string[]\n}\n\nclass Fractionator {\n  wordFrequency: { [w: string]: number } = Object.fromEntries(wordFrequency.map((word, idx) => [word, idx + 1]))\n  fractionate(words: string[]): Distillate[] {\n    const catagories: number[] = [800, 1600, 3200, 6400, 12800, 25600, 51200, 102400]\n    const unGroupedDistillates: [string, string][] = words.map(word => {\n      if (this.wordFrequency.hasOwnProperty(word)) {\n        return [word, Math.min(...catagories.filter(c => c > this.wordFrequency[word])).toString()];\n      } else {\n        return [word, \"Unknown\"];\n      }\n    });\n    const result: Distillate[] = (catagories.map(c => c.toString()).concat([\"Unknown\"])).map(\n      c => {\n        const r: { category: string, distillate: string[] } = { category: c, distillate: [] };\n        return r;\n      }\n    );\n    unGroupedDistillates.forEach(distillate => {\n      const c = result.find(r => r.category === distillate[1]);\n      if (c !== undefined && !c.distillate.includes(distillate[0])) {\n        c.distillate.push(distillate[0]);\n      }\n    });\n    result.forEach(d => {\n      if (d.category !== \"Unknown\") {\n        const getIndexWithDefault: (word: string) => number = (word) => {\n          if (this.wordFrequency.hasOwnProperty(word)) {\n            return this.wordFrequency[word];\n          } else {\n            return 0;\n          }\n        }\n        d.distillate.sort((a, b) => getIndexWithDefault(b) - getIndexWithDefault(a));\n      }\n    })\n    return result;\n  }\n}\n\nclass Internationalization {\n  constructor() {\n    this.getLanugage = this.getLanugage.bind(this);\n    this.i18n = this.i18n.bind(this);\n  }\n\n  translation: { [t: string]: { [l: string]: string } } = {\n    \"Paste Text\": { \"zh-CN\": \"粘贴文本\", \"zh-TW\": \"粘貼文本\" },\n    \"Choose File\": { \"zh-CN\": \"选择文件\", \"zh-TW\": \"選擇文件\" },\n    \"Fractionate\": { \"zh-CN\": \"分馏\", \"zh-TW\": \"分餾\" },\n    \"Demo\": { \"zh-CN\": \"演示\", \"zh-TW\": \"演示\" },\n    \"Paste Text Here\": { \"zh-CN\": \"在这里粘贴文本\", \"zh-TW\": \"在這裡粘貼文本\" },\n    \"Return\": { \"zh-CN\": \"返回\", \"zh-TW\": \"返回\" }\n  }\n\n  getLanugage(): string {\n    const languageMapping: { [alias: string]: string } = {\n      \"en\": \"en-US\", \"zh\": \"zh-CN\",\n      \"zh-cn\": \"zh-CN\", \"zh-tw\": \"zh-TW\",\n      \"zh-HK\": \"zh-TW\", \"zh-hk\": \"zh-TW\"\n    };\n    let language = navigator.language;\n    if (languageMapping.hasOwnProperty(language)) {\n      language = languageMapping[language];\n    }\n    return language;\n  }\n\n  i18n(text: string | { [lang: string]: string }): string {\n    const language = this.getLanugage();\n    if (typeof text === \"string\") {\n      if (language !== \"en-US\") {\n        const multilanguage = this.translation[text];\n        if (multilanguage.hasOwnProperty(language)) {\n          return multilanguage[language];\n        } else {\n          return text;\n        }\n      }\n      else {\n        return text;\n      }\n    } else {\n      if (text.hasOwnProperty(language)) {\n        return text[language];\n      } else {\n        return text[\"en-US\"]\n      }\n    }\n  }\n}\n\nfunction i18n(text: string | { [lang: string]: string }): string {\n  return new Internationalization().i18n(text);\n}\n\ninterface GeneralAppComponentProps {\n  setStage: (stage: AppStage) => void;\n  setInput: (input: string) => void\n}\n\ninterface FullAccessAppComponentProps {\n  setStage: (stage: AppStage) => void;\n  setInput: (input: string) => void\n  getInput: () => string;\n}\n\nconst RequestForInput: React.FunctionComponent<GeneralAppComponentProps> = ({ setStage, setInput }) =>\n  <React.Fragment>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"mb-1\">\n          {i18n({\n            \"en-US\": \"Fractionator is an English learning tool for English language learners. Fractionator can create a word list sorted from least common words to most common words form input text so you can learn the vocabulary of a book or a movie ahead without spoilers and have a not-interrupted-by-dictionary reading or watching experiments.\",\n            \"zh-CN\": \"分馏器·Fractionator 是一个为英语学习者提供的英语学习工具。分馏器·Fractionator 可以从输入的文本中提取出一个按照词频从最不常见到最常见的单词表。这样你就可以在不被剧透的情况下提前学习所有的词汇，获得一个不被查字典打扰的阅读或观看体验。\",\n            \"zh-TW\": \"分餾器·Fractionator 是一個為英語學習者提供的英語學習工具。分餾器·Fractionator 可以從輸入的文本中提取出一個按照詞頻從最不常見到最常見的單詞表。這樣你就可以在不被劇透的情況下提前學習所有的詞彙，獲得一個不被查字典打擾的閱讀或觀看體驗。\"\n          })}\n        </p>\n        <p className=\"mb-1\">\n          {i18n({\n            \"en-US\": \"To use Fractionator, click [Paste Text] button, then paste your input text or click [Choose File] button, choose a text file (.txt), or a subtitle file (.srt). Finally, click [Fractionate] button to fractionating result. Try It now by clicking the [Demo] button to fractionate some example text. \",\n            \"zh-CN\": \"点击【粘贴文本】按钮，然后黏贴想要分馏的文本，或者点击【选择文件】按钮，选择一个文本文档（.txt）或字幕文档（.srt）来开始使用分馏器·Fractionator。当输入好文字或选择好文件时，点击【分馏】按钮来查看分馏的结果。点击【演示】按钮用预设的样本文本来试一试分馏器·Fractionator 的效果。\",\n            \"zh-TW\": \"點擊【粘貼文本】按鈕，然後黏貼想要分餾的文本，或者點擊【選擇文件】按鈕，選擇一個文本文檔（.txt）或字幕文檔（.srt）來開始使用分餾器·Fractionator。當輸入好文字或選擇好文件時，點擊【分餾】按鈕來查看分餾的結果。點擊【演示】按鈕用預設的樣本文本來試一試分餾器·Fractionator 的效果。\"\n          })}\n        </p>\n        <p className=\"mb-1\">\n          {i18n({\n            \"en-US\": \"Fractionator is free software, all text is processed locally on your browser without been uploaded to any servers. For more information, visit the project \",\n            \"zh-CN\": \"分馏器·Fractionator 是一个自由软件，所有的文字处理都是在浏览器本地进行的，你所输入的任何的内容都不会被上传。更多信息请访问\",\n            \"zh-TW\": \"分餾器·Fractionator 是一個自由軟件，所有的文字處理都是在瀏覽器本地進行的，你所輸入的任何的內容都不會被上傳。更多信息請訪問\"\n          })}\n          <a href=\"https://github.com/tetrau/fractionator\">\n            {i18n({\n              \"en-US\": \"homepage\",\n              \"zh-CN\": \"项目主页\",\n              \"zh-TW\": \"項目主頁\"\n            })}\n          </a>\n        </p>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForText\"); setInput(demoText) }}>{i18n(\"Demo\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setStage(\"RequestForText\")}>{i18n(\"Paste Text\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setStage(\"RequestForFile\")}>{i18n(\"Choose File\")}</button>\n      </div>\n    </div>\n  </React.Fragment>\n\nconst RequestForText: React.FunctionComponent<FullAccessAppComponentProps> = ({ setStage, getInput, setInput }) =>\n  <React.Fragment>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <textarea style={{ height: window.innerHeight * 0.5 }} className=\"form-control mb-1\" placeholder={i18n(\"Paste Text Here\")} value={getInput()} onChange={e => setInput(e.target.value)} ></textarea>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForInput\"); setInput(\"\") }}>{i18n(\"Return\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForFile\"); setInput(\"\") }}>{i18n(\"Choose File\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => setStage(\"ResultDisplay\")}>{i18n(\"Fractionate\")}</button>\n      </div>\n    </div>\n  </React.Fragment>\n\nclass RequestForFile extends React.Component<GeneralAppComponentProps, { file: File | null }> {\n  inputFileRef: React.RefObject<HTMLInputElement>\n  extractor: null | FileTextExtractor\n  constructor(props: GeneralAppComponentProps) {\n    super(props);\n    this.handleFileChoosed = this.handleFileChoosed.bind(this);\n    this.gotoResultDisplay = this.gotoResultDisplay.bind(this);\n    this.inputFileRef = React.createRef();\n    this.state = { file: null };\n    this.extractor = null\n  }\n\n  handleFileChoosed(): void {\n    const input = this.inputFileRef.current;\n    if (input && input.files !== null && input.files.length > 0) {\n      const file: File = input.files[0];\n      this.setState({ file: file });\n    }\n  }\n\n  gotoResultDisplay(): void {\n    if (this.extractor !== null) {\n      this.extractor.extract((text) => {\n        if (text !== null) {\n          this.props.setInput(text);\n          this.props.setStage(\"ResultDisplay\");\n        }\n      })\n    }\n  }\n\n  render() {\n    return <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"row\">\n          <div className=\"col-12 d-flex justify-content-center\">\n            <div className=\"form-group\">\n              <input type=\"file\" className=\"form-control-file\" onChange={this.handleFileChoosed} accept=\".txt,.srt,.pdf\" ref={this.inputFileRef} />\n              {this.state.file !== null && this.state.file.name.toLowerCase().endsWith(\".pdf\") &&\n                <PDFFileTextExtractorController file={this.state.file} setExtractor={(e) => this.extractor = e} />}\n              {this.state.file !== null && !this.state.file.name.toLowerCase().endsWith(\".pdf\") &&\n                <TextFileTextExtractorController file={this.state.file} setExtractor={(e) => this.extractor = e} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 d-flex justify-content-center\">\n            <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { this.props.setStage(\"RequestForInput\"); this.props.setInput(\"\") }}>{i18n(\"Return\")}</button>\n            <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { this.props.setStage(\"RequestForText\"); this.props.setInput(\"\") }}>{i18n(\"Paste Text\")}</button>\n            <button type=\"button\" className=\"btn btn-outline-danger\" onClick={this.gotoResultDisplay}>{i18n(\"Fractionate\")}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  }\n}\n\nclass WordDisplay extends React.Component<{ word: string, meaning: string }, { translate: boolean }> {\n  constructor(props: { word: string, meaning: string }) {\n    super(props);\n    this.state = { translate: false };\n    this.handleDoubleClick = this.handleDoubleClick.bind(this);\n  }\n\n  handleDoubleClick() {\n    this.setState({ translate: !this.state.translate });\n  }\n\n  render() {\n    if (this.state.translate) {\n      return <p className=\"mb-1 w-100\" onDoubleClick={this.handleDoubleClick}>\n        <strong>{`${this.props.word}`}</strong>\n        {`: ${this.props.meaning}`}\n      </p>\n    } else {\n      return <span onDoubleClick={this.handleDoubleClick} className=\"mr-1\">{`${this.props.word} `}</span>\n    }\n  }\n}\n\nclass Dictionary {\n  dictionary: { [word: string]: string }\n\n  constructor(dict: { [word: string]: string }) {\n    this.dictionary = dict;\n    this.define = this.define.bind(this);\n  }\n\n  define(word: string): string {\n    if (this.dictionary.hasOwnProperty(word)) {\n      return this.dictionary[word];\n    } else {\n      return \"\"\n    }\n  }\n}\n\ninterface DictionaryLibraryStatus {\n  selected: string | null;\n  dictionaryStatus: {\n    [lang: string]: \"Ready\" | \"Downloading\" | \"Error\" | \"NotDownloaded\"\n  }\n}\n\nclass DictionaryLibrary {\n  dictionaryLibrary: {\n    [lang: string]: {\n      dictionary: Dictionary | null,\n      status: \"Ready\" | \"Downloading\" | \"Error\" | \"NotDownloaded\",\n      url: string\n    }\n  }\n  selected: string | null\n  updateDictionaryLibraryStatus: (dls: DictionaryLibraryStatus) => void\n  constructor(dictionaryURLs: { [lang: string]: string }, updateDictionaryLibraryStatusFunc: (dls: DictionaryLibraryStatus) => void) {\n    this.dictionaryLibrary = {};\n    this.selected = null;\n    for (const language in dictionaryURLs) {\n      this.dictionaryLibrary[language] = {\n        dictionary: null,\n        status: \"NotDownloaded\",\n        url: dictionaryURLs[language]\n      }\n    }\n    this.updateDictionaryLibraryStatus = updateDictionaryLibraryStatusFunc;\n    this.downloadDictionary = this.downloadDictionary.bind(this);\n    this.dictionaryLibraryStatus = this.dictionaryLibraryStatus.bind(this);\n    this.select = this.select.bind(this);\n  }\n\n  dictionaryLibraryStatus(): DictionaryLibraryStatus {\n    const dls: DictionaryLibraryStatus = { selected: this.selected, dictionaryStatus: {} };\n    for (const lang in this.dictionaryLibrary) {\n      dls.dictionaryStatus[lang] = this.dictionaryLibrary[lang].status;\n    }\n    return dls\n  }\n\n  unselect(): void {\n    this.selected = null;\n    this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n  }\n\n  select(lang: string): void {\n    if (this.dictionaryLibrary.hasOwnProperty(lang)) {\n      this.selected = lang;\n      this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n      this.downloadDictionary(lang);\n    }\n  }\n\n  getDictionary(): Dictionary | null {\n    if (this.selected !== null) {\n      return this.dictionaryLibrary[this.selected].dictionary;\n    } else {\n      return null;\n    }\n  }\n\n  downloadDictionary(language: string) {\n    if (this.dictionaryLibrary.hasOwnProperty(language) && this.dictionaryLibrary[language].status !== \"Ready\") {\n      const thisDictionary = this.dictionaryLibrary[language]\n      const url = thisDictionary.url;\n      thisDictionary.status = \"Downloading\";\n      this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n      fetch(url)\n        .then(response => response.json())\n        .then(dictionary => {\n          thisDictionary.status = \"Ready\";\n          thisDictionary.dictionary = new Dictionary(dictionary);\n          this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n        })\n        .catch(error => {\n          thisDictionary.status = \"Error\";\n          this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n        })\n    }\n  }\n}\n\nconst ResultDisplay: React.FunctionComponent<{\n  setStage: (stage: AppStage) => void,\n  setInput: (input: string) => void,\n  getInput: () => string,\n  dictionaryLibrary: DictionaryLibrary\n}> = ({ setStage, getInput, setInput, dictionaryLibrary }) => {\n  const tokens = new Tokenizer().tokenize(getInput());\n  const lemmas = new Lemmatizer().lemmatize(tokens);\n  const distillates = new Fractionator().fractionate(lemmas);\n  function displayWords(words: string[], neverTranslate: boolean): React.ReactNode[] {\n    if (dictionaryLibrary.selected !== null\n      && !neverTranslate\n      && dictionaryLibrary.dictionaryLibrary[dictionaryLibrary.selected].status === \"Ready\") {\n      return words.map(word => {\n        let meaning: string = \"\"\n        const dictionary = dictionaryLibrary.getDictionary()\n        if (dictionary !== null) {\n          meaning = dictionary.define(word);\n        }\n        return <WordDisplay key={word} word={word} meaning={meaning} />;\n      });\n    } else {\n      return [<p className=\"text-center\" key={`distillate-Unknown`}>{words.join(\" \")}</p>]\n    }\n  }\n  function DoubleClickDefineOption(text: string, language: string, dictionaryName: string): string {\n    const dictionaryStatus = dictionaryLibrary.dictionaryLibrary[language].status;\n    if (dictionaryStatus === \"Ready\" || dictionaryStatus === \"NotDownloaded\") {\n      return text;\n    } else if (dictionaryStatus === \"Downloading\") {\n      return i18n({\n        \"en-US\": `Downloading ${dictionaryName} Dictionary...`,\n        \"zh-CN\": `正在下载${dictionaryName}字典...`,\n        \"zh-TW\": `正在下載${dictionaryName}字典...`\n      });\n    } else {\n      return i18n({\n        \"en-US\": \"Dictionary Downloading Failed, Please Reload this Page\",\n        \"zh-CN\": \"下载字典失败，请刷新页面重试\",\n        \"zh-TW\": \"下載字典失敗，請刷新頁面重試\"\n      });\n    }\n  }\n  const display = distillates.flatMap(\n    ({ category, distillate }) => {\n      if (distillate.length === 0) {\n        return []\n      } else {\n        return [\n          <div className=\"d-flex justify-content-center flex-wrap\" key={`words-${category}`}>\n            {displayWords(distillate, category === \"Unknown\")}\n          </div>,\n          <div className=\"separator\" key={`separator-${category}`}>{category}</div>\n        ];\n      }\n    }\n  ).reverse();\n  return <React.Fragment>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        {display}\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 d-flex justify-content-center flex-wrap\">\n        <button type=\"button\" className=\"btn btn-outline-primary mt-1 mb-1\" onClick={() => { setStage(\"RequestForInput\"); setInput(\"\") }}>{i18n(\"Return\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary mt-1 mb-1\" onClick={() => { setStage(\"RequestForText\"); setInput(\"\") }}>{i18n(\"Paste Text\")}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary mt-1 mb-1\" onClick={() => { setStage(\"RequestForFile\"); setInput(\"\") }}>{i18n(\"Choose File\")}</button>\n        <div className=\"form-group mt-1 mb-1\">\n          <select className=\"form-control w-auto\" value={dictionaryLibrary.selected === null ? \"\" : dictionaryLibrary.selected} onChange={(event) => {\n            const value = event.target.value;\n            if (value === \"\") {\n              dictionaryLibrary.unselect();\n            } else {\n              dictionaryLibrary.select(event.target.value)\n            }\n          }}>\n            <option value=\"\">\n              {i18n({\n                \"en-US\": \"Double Click Word Show Defination: OFF\",\n                \"zh-CN\": \"双击单词显示释义：关\",\n                \"zh-TW\": \"雙擊單詞顯示釋義：關\"\n              })}\n            </option>\n            <option value=\"zh-CN\">\n              {DoubleClickDefineOption(i18n({\n                \"en-US\": \"Double Click Word Show Chinese Defination\",\n                \"zh-CN\": \"双击单词显示中文释义\",\n                \"zh-TW\": \"雙擊單詞顯示中文釋義\"\n              }), \"zh-CN\",\n                i18n({\n                  \"en-US\": \"English-Chinese\",\n                  \"zh-CN\": \"英汉\",\n                  \"zh-TW\": \"英漢\"\n                }))}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </React.Fragment >\n}\n\ntype AppStage = \"RequestForInput\" | \"RequestForText\" | \"ResultDisplay\" | \"RequestForFile\"\n\nclass App extends React.Component<{}, {\n  stage: AppStage;\n  input: string;\n  dictionaryLibraryStatus: DictionaryLibraryStatus\n}> {\n  dictionaryLibrary: DictionaryLibrary\n  constructor(props: any) {\n    super(props);\n    this.dictionaryLibrary = new DictionaryLibrary(\n      { \"zh-CN\": process.env.PUBLIC_URL + \"/dictionary.zh-CN.json\" },\n      (newDictionaryLibraryStatus) => this.setState({ dictionaryLibraryStatus: newDictionaryLibraryStatus })\n    );\n    let dictionaryLanguage = new Internationalization().getLanugage();\n    dictionaryLanguage = dictionaryLanguage === \"zh-TW\" ? \"zh-CN\" : dictionaryLanguage\n    this.dictionaryLibrary.downloadDictionary(dictionaryLanguage);\n    this.state = {\n      stage: \"RequestForInput\",\n      input: \"\",\n      dictionaryLibraryStatus: this.dictionaryLibrary.dictionaryLibraryStatus()\n    };\n    this.setStage = this.setStage.bind(this);\n    this.setInput = this.setInput.bind(this);\n    this.getInput = this.getInput.bind(this);\n  }\n\n  setStage(stage: AppStage): void {\n    this.setState({ \"stage\": stage });\n  }\n\n  setInput(input: string): void {\n    this.setState({ \"input\": input });\n  }\n\n  getInput(): string {\n    return this.state.input;\n  }\n\n  render() {\n    return <div className=\"d-flex align-items-center min-vh-100\">\n      <div className=\"container\">\n        {this.state.stage === \"RequestForInput\" && <RequestForInput setStage={this.setStage} setInput={this.setInput} />}\n        {this.state.stage === \"RequestForText\" && <RequestForText setStage={this.setStage} getInput={this.getInput} setInput={this.setInput} />}\n        {this.state.stage === \"ResultDisplay\" && <ResultDisplay dictionaryLibrary={this.dictionaryLibrary} setStage={this.setStage} getInput={this.getInput} setInput={this.setInput} />}\n        {this.state.stage === \"RequestForFile\" && <RequestForFile setStage={this.setStage} setInput={this.setInput} />}\n      </div>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (process.env.REACT_APP_PAGE_VIEW_COUNT_URL) {\n  fetch(process.env.REACT_APP_PAGE_VIEW_COUNT_URL);\n}\n\nserviceWorker.register();\n"],"sourceRoot":""}