{"version":3,"sources":["pdf.worker.min.data","data.ts","fractionator.ts","internationlization.ts","pdf_extractor.js","multilanguage.ts","file_text_extractor.tsx","dictionary.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","lemmaMapping","Object","fromEntries","compactLemmaMapping","split","flatMap","wordFormsLine","splitedWordFormsLine","word","map","f","includes","wordFrequency","compactWordFrequency","words","Set","concat","keys","isWord","has","Tokenizer","text","toLowerCase","replace","t","trim","filter","length","token","every","reduce","accu","lastWord","concatWord","push","pop","Lemmatizer","this","tokens","hasOwnProperty","Fractionator","idx","catagories","unGroupedDistillates","Math","min","c","toString","result","category","distillate","forEach","find","r","undefined","d","getIndexWithDefault","sort","a","b","Internationalization","getLanugage","bind","i18n","languageMapping","language","navigator","concatText","text1","text2","words1","w","words2","lastWord1","firstWord2","endsWith","slice","trimEnd","trimStart","pdfjsLib","workerSrc","workerURL","PDFExtractor","pdf","rawPdf","data","getPdf","numPages","getPageIndexFromOutlineItem","extractOutline","extractOnePage","promise","_pdfInfo","outlineItem","dest","getDestination","ref","getPageIndex","getOutline","outline","depth2Outline","o1","depth","items","o2","title","Promise","all","o","pageIndex","simplifiedOutline","calculateChapter","outlineInput","i","depth1Result","correcttedDepth1Result","correctResult","getPage","page","getTextContent","pageTextContent","console","log","str","pasteTextBtn","chooseFileBtn","fractionateBtn","demoBtn","pasteTextHere","returnBtn","desc","instruction","privacyStatement","homePageLink","dictionaryOff","dictionaryChineseOn","dictionaryDownloadFailed","downloadingDictionary","pdfNoTableOfContent","pdfSelectChapter","FileTextExtractor","TextFileTextExtractor","file","callback","fileReader","FileReader","onload","readAsText","PDFFileTextExtractor","fromPage","toPage","ArrayBuffer","pdfExtractor","readAsArrayBuffer","openPDFFile","Array","from","v","k","prevPages","pageNumber","prevPageText","thisPageText","resolve","then","TextFileTextExtractorController","setExtractor","PDFFileTextExtractorController","props","state","pdfInfo","pageRange","pageRangeSafe","chapterSelectedIdx","badFile","updateToSafePageRange","readPDF","prevProps","setState","outlineAndNumPage","safeFromPage","max","safeToPage","className","type","placeholder","value","onBlur","onChange","event","updatePageRange","parseInt","target","chapter","multilaanguage","key","React","Component","Dictionary","dict","dictionary","define","DictionaryLibrary","updateDictionaryLibraryStatusFunc","dictionaryLibrary","selected","updateDictionaryLibraryStatus","status","downloadDictionary","dictionaryLibraryStatus","select","dls","dictionaryStatus","lang","thisDictionary","dictionaryModulePromise","default","catch","error","RequestForInput","setStage","setInput","Fragment","href","onClick","demoText","RequestForText","getInput","style","height","window","innerHeight","e","RequestForFile","inputFileRef","extractor","handleFileChoosed","gotoResultDisplay","createRef","input","current","files","extract","accept","name","WordDisplay","translate","handleDoubleClick","onDoubleClick","meaning","ResultDisplay","tokenize","lemmas","lemmatize","display","fractionate","neverTranslate","join","getDictionary","reverse","unselect","DoubleClickDefineOption","App","newDictionaryLibraryStatus","dictionaryLanguage","stage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","fetch","process","URL","origin","addEventListener","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f7f1226d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pdf.worker.min.55226086.data\";","import compactLemmaMapping from './compact_lemma_mapping.json'\nimport compactWordFrequency from './compact_word_frequency.json'\n\nexport const lemmaMapping: { [word: string]: string } = Object.fromEntries(\n    compactLemmaMapping.split(\";\").flatMap(\n        wordFormsLine => {\n            const splitedWordFormsLine = wordFormsLine.split(\":\");\n            const word = splitedWordFormsLine[0];\n            const forms = splitedWordFormsLine[1].split(\",\");\n            return forms.map(f => {\n                const compactForm = [\"ing\", \"ed\", \"s\", \"es\", \"er\", \"est\"];\n                if (compactForm.includes(f)) {\n                    return [word + f, word];\n                } else {\n                    return [f, word];\n                }\n            });\n        }\n    )\n)\n\nexport const wordFrequency: string[] = compactWordFrequency.split(\";\");\n\nconst words: Set<string> = new Set(wordFrequency.concat(Object.keys(lemmaMapping)));\n\nexport function isWord(word: string): boolean {\n    return words.has(word);\n}","import { lemmaMapping, wordFrequency, isWord } from \"./data\"\n\nexport class Tokenizer {\n    tokenize(text: string): string[] {\n        return text\n            .toLowerCase()\n            .replace(/n't/g, \"\")\n            .split(/[^a-zA-Z-]/)\n            .map(t => t.trim())\n            .filter(t => t.length > 2)\n            .filter(t => t !== \"-\")\n            .flatMap(token => {\n                if (isWord(token)) {\n                    return [token];\n                } else if (token.split(\"-\").every(isWord)) {\n                    return token.split(\"-\");\n                } else {\n                    return [token];\n                }\n            }).reduce((accu: string[], word: string) => {\n                if (accu.length !== 0) {\n                    const lastWord = accu[accu.length - 1];\n                    const concatWord = lastWord.concat(word);\n                    if (!isWord(lastWord) && !isWord(word) && isWord(concatWord)) {\n                        accu.pop();\n                        accu.push(concatWord);\n                    } else {\n                        accu.push(word);\n                    }\n                } else {\n                    accu.push(word)\n                }\n                return accu;\n            }, [])\n    }\n}\n\nexport class Lemmatizer {\n    lemmaMapping: { [key: string]: string }\n    constructor() {\n        this.lemmaMapping = lemmaMapping;\n\n    }\n    lemmatize(tokens: string[]): string[] {\n        return tokens.map(token => {\n            if (this.lemmaMapping.hasOwnProperty(token)) {\n                return this.lemmaMapping[token];\n            }\n            else {\n                return token;\n            }\n        })\n    }\n}\n\nexport interface Distillate {\n    category: string;\n    distillate: string[]\n}\n\nexport class Fractionator {\n    wordFrequency: { [w: string]: number } = Object.fromEntries(wordFrequency.map((word, idx) => [word, idx + 1]))\n    fractionate(words: string[]): Distillate[] {\n        const catagories: number[] = [800, 1600, 3200, 6400, 12800, 25600, 51200, 102400]\n        const unGroupedDistillates: [string, string][] = words.map(word => {\n            if (this.wordFrequency.hasOwnProperty(word)) {\n                return [word, Math.min(...catagories.filter(c => c > this.wordFrequency[word])).toString()];\n            } else {\n                return [word, \"Unknown\"];\n            }\n        });\n        const result: Distillate[] = (catagories.map(c => c.toString()).concat([\"Unknown\"])).map(\n            c => {\n                const r: { category: string, distillate: string[] } = { category: c, distillate: [] };\n                return r;\n            }\n        );\n        unGroupedDistillates.forEach(distillate => {\n            const c = result.find(r => r.category === distillate[1]);\n            if (c !== undefined && !c.distillate.includes(distillate[0])) {\n                c.distillate.push(distillate[0]);\n            }\n        });\n        result.forEach(d => {\n            if (d.category !== \"Unknown\") {\n                const getIndexWithDefault: (word: string) => number = (word) => {\n                    if (this.wordFrequency.hasOwnProperty(word)) {\n                        return this.wordFrequency[word];\n                    } else {\n                        return 0;\n                    }\n                }\n                d.distillate.sort((a, b) => getIndexWithDefault(b) - getIndexWithDefault(a));\n            }\n        })\n        return result;\n    }\n}","export class Internationalization {\n    constructor() {\n        this.getLanugage = this.getLanugage.bind(this);\n        this.i18n = this.i18n.bind(this);\n    }\n\n    getLanugage(): string {\n        const languageMapping: { [alias: string]: string } = {\n            \"en\": \"en-US\", \"zh\": \"zh-CN\",\n            \"zh-cn\": \"zh-CN\", \"zh-tw\": \"zh-TW\",\n            \"zh-HK\": \"zh-TW\", \"zh-hk\": \"zh-TW\"\n        };\n        let language = navigator.language;\n        if (languageMapping.hasOwnProperty(language)) {\n            language = languageMapping[language];\n        }\n        return language;\n    }\n\n    i18n(text: { [lang: string]: string }): string {\n        const language = this.getLanugage();\n        if (text.hasOwnProperty(language)) {\n            return text[language];\n        } else {\n            return text[\"en-US\"]\n        }\n    }\n}\n\nexport function i18n(text: { [lang: string]: string }): string {\n    return new Internationalization().i18n(text);\n}\n","import * as pdfjsLib from \"pdfjs-dist/es5/build/pdf.js\"\nimport { isWord } from \"./data\";\nimport workerURL from \"./pdf.worker.min.data\";\n\n// A workaround to trick create-react-app putting pdf.worker.min.js in /build/static/media\n// so pdf.worker.min.js can be cached by the default service-worker.\npdfjsLib.GlobalWorkerOptions.workerSrc = workerURL;\n\nexport function concatText(text1, text2) {\n    const words1 = text1.toLowerCase().split(/[^a-zA-Z-']/).filter(w => w.length > 0);\n    const words2 = text2.toLowerCase().split(/[^a-zA-Z-']/).filter(w => w.length > 0);\n    if (words1.length === 0 || words2.length === 0) {\n    } else {\n        const lastWord1 = words1[words1.length - 1];\n        const firstWord2 = words2[0];\n        if (isWord(lastWord1) && isWord(firstWord2)) {\n        } else if (lastWord1.endsWith(\"-\") && isWord(lastWord1.slice(null, -1)) && isWord(firstWord2)) {\n            return text1.trimEnd().concat(text2.trimStart());\n        }\n        else if (lastWord1.endsWith(\"-\")) {\n            const word = lastWord1.slice(null, -1).concat(firstWord2);\n            if (isWord(word) && text1.trimEnd().endsWith(\"-\")) {\n                return text1.trimEnd().slice(null, -1).concat(text2);\n            }\n        } else if (!isWord(lastWord1) && !isWord(firstWord2)) {\n            if (isWord(lastWord1.concat(firstWord2))) {\n                return text1.trimEnd().concat(text2.trimStart())\n            }\n        }\n    }\n    return `${text1} ${text2}`\n}\n\n\nexport class PDFExtractor {\n    constructor(pdf) {\n        this.rawPdf = { data: pdf };\n        this.pdf = null;\n        this.getPdf = this.getPdf.bind(this);\n        this.numPages = this.numPages.bind(this);\n        this.getPageIndexFromOutlineItem = this.getPageIndexFromOutlineItem.bind(this);\n        this.extractOutline = this.extractOutline.bind(this);\n        this.extractOnePage = this.extractOnePage.bind(this);\n    }\n\n    async getPdf() {\n        if (this.pdf === null) {\n            this.pdf = await pdfjsLib.getDocument(this.rawPdf).promise;\n        }\n        return this.pdf\n    }\n\n    async numPages() {\n        return (await this.getPdf())._pdfInfo.numPages;\n    }\n\n    async getPageIndexFromOutlineItem(outlineItem) {\n        const pdf = await this.getPdf();\n        let dest = outlineItem.dest;\n        let ref\n        if (typeof outlineItem.dest === \"string\") {\n            ref = (await pdf.getDestination(outlineItem.dest))[0];\n        } else {\n            ref = dest[0];\n        }\n        return await pdf.getPageIndex(ref);\n    }\n\n    async extractOutline() {\n        const pdf = await this.getPdf();\n        const outline = await pdf.getOutline();\n        if (outline === null) {\n            return [];\n        }\n        const depth2Outline = outline.flatMap(o1 => {\n            o1.depth = 1\n            return [o1].concat(\n                o1.items.map(o2 => {\n                    o2.title = `${o1.title} / ${o2.title}`;\n                    o2.depth = 2;\n                    return o2\n                })\n            )\n        });\n        const simplifiedOutline = await Promise.all(\n            depth2Outline\n                .filter(o => o.dest !== null)\n                .map(async (o, idx) => ({\n                    title: o.title,\n                    idx: idx,\n                    pageIndex: await this.getPageIndexFromOutlineItem(o),\n                    depth: o.depth\n                }))\n        );\n        const calculateChapter = async (outlineInput) => {\n\n            const length = outlineInput.length;\n            return await Promise.all(outlineInput.map(async (o, i) => {\n                if (i === length - 1) {\n                    const numPages = (await this.numPages()) - o.pageIndex;\n                    return {\n                        title: o.title,\n                        pageIndex: o.pageIndex,\n                        numPages: numPages === 0 ? 1 : numPages,\n                        idx: o.idx,\n                        depth: o.depth\n                    }\n                } else {\n                    const numPages = outlineInput[i + 1].pageIndex - o.pageIndex;\n                    return {\n                        title: o.title,\n                        pageIndex: o.pageIndex,\n                        numPages: numPages === 0 ? 1 : numPages,\n                        idx: o.idx,\n                        depth: o.depth\n                    }\n                }\n            }))\n        }\n        const result = await calculateChapter(simplifiedOutline);\n        const depth1Result = result.filter(o => o.depth === 1);\n        const correcttedDepth1Result = await calculateChapter(depth1Result);\n        const correctResult = result.filter(o => o.depth === 2).concat(correcttedDepth1Result)\n        correctResult.sort((a, b) => a.idx - b.idx);\n        return correctResult;\n    }\n\n    async extractOnePage(pageIndex) {\n        const pdf = await this.getPdf();\n        const page = await pdf.getPage(pageIndex + 1);\n        const pageTextContent = await page.getTextContent();\n        pageTextContent.items.map(i => console.log(i.str));\n        return pageTextContent.items.map(i => i.str).reduce(concatText, \"\")\n    }\n}\n\n","export const pasteTextBtn = { \"en-US\": \"Paste Text\", \"zh-CN\": \"粘贴文本\", \"zh-TW\": \"粘貼文本\" };\nexport const chooseFileBtn = { \"en-US\": \"Choose File\", \"zh-CN\": \"选择文件\", \"zh-TW\": \"選擇文件\" };\nexport const fractionateBtn = { \"en-US\": \"Fractionate\", \"zh-CN\": \"分馏\", \"zh-TW\": \"分餾\" };\nexport const demoBtn = { \"en-US\": \"Demo\", \"zh-CN\": \"演示\", \"zh-TW\": \"演示\" };\nexport const pasteTextHere = { \"en-US\": \"Paste Text Here\", \"zh-CN\": \"在这里粘贴文本\", \"zh-TW\": \"在這裡粘貼文本\" };\nexport const returnBtn = { \"en-US\": \"Return\", \"zh-CN\": \"返回\", \"zh-TW\": \"返回\" };\nexport const desc = {\n    \"en-US\": \"Fractionator is an English learning tool for English language learners. Fractionator can create a word list sorted from least common words to most common words form input text so you can learn the vocabulary of a book or a movie ahead without spoilers and have a not-interrupted-by-dictionary reading or watching experiments.\",\n    \"zh-CN\": \"分馏器·Fractionator 是一个为英语学习者提供的英语学习工具。分馏器·Fractionator 可以从输入的文本中提取出一个按照词频从最不常见到最常见的单词表。这样你就可以在不被剧透的情况下提前学习所有的词汇，获得一个不被查字典打扰的阅读或观看体验。\",\n    \"zh-TW\": \"分餾器·Fractionator 是一個為英語學習者提供的英語學習工具。分餾器·Fractionator 可以從輸入的文本中提取出一個按照詞頻從最不常見到最常見的單詞表。這樣你就可以在不被劇透的情況下提前學習所有的詞彙，獲得一個不被查字典打擾的閱讀或觀看體驗。\"\n};\n\nexport const instruction = {\n    \"en-US\": \"To use Fractionator, click [Paste Text] button, then paste your input text or click [Choose File] button, choose a text file (.txt), pdf file (.pdf), or a subtitle file (.srt). Finally, click [Fractionate] button to fractionating result. Try It now by clicking the [Demo] button to fractionate some example text. \",\n    \"zh-CN\": \"点击【粘贴文本】按钮，然后黏贴想要分馏的文本，或者点击【选择文件】按钮，选择一个文本文档（.txt），pdf 文档（.pdf）或字幕文档（.srt）来开始使用分馏器·Fractionator。当输入好文字或选择好文件时，点击【分馏】按钮来查看分馏的结果。点击【演示】按钮用预设的样本文本来试一试分馏器·Fractionator 的效果。\",\n    \"zh-TW\": \"點擊【粘貼文本】按鈕，然後黏貼想要分餾的文本，或者點擊【選擇文件】按鈕，選擇一個文本文檔（.txt），pdf 文檔（.pdf）或字幕文檔（.srt）來開始使用分餾器·Fractionator。當輸入好文字或選擇好文件時，點擊【分餾】按鈕來查看分餾的結果。點擊【演示】按鈕用預設的樣本文本來試一試分餾器·Fractionator 的效果。\"\n};\n\nexport const privacyStatement = {\n    \"en-US\": \"Fractionator is free software, all text is processed locally on your browser without been uploaded to any servers. For more information, visit the project \",\n    \"zh-CN\": \"分馏器·Fractionator 是一个自由软件，所有的文字处理都是在浏览器本地进行的，你所输入的任何的内容都不会被上传。更多信息请访问\",\n    \"zh-TW\": \"分餾器·Fractionator 是一個自由軟件，所有的文字處理都是在瀏覽器本地進行的，你所輸入的任何的內容都不會被上傳。更多信息請訪問\"\n};\n\nexport const homePageLink = {\n    \"en-US\": \"homepage\",\n    \"zh-CN\": \"项目主页\",\n    \"zh-TW\": \"項目主頁\"\n};\n\nexport const dictionaryOff = {\n    \"en-US\": \"Double Click Word Show Defination: OFF\",\n    \"zh-CN\": \"双击单词显示释义：关\",\n    \"zh-TW\": \"雙擊單詞顯示釋義：關\"\n};\n\nexport const dictionaryChineseOn = {\n    \"en-US\": \"Double Click Word Show Chinese Defination\",\n    \"zh-CN\": \"双击单词显示中文释义\",\n    \"zh-TW\": \"雙擊單詞顯示中文釋義\"\n};\n\nexport const dictionaryDownloadFailed = {\n    \"en-US\": \"Dictionary Downloading Failed, Please Reload this Page\",\n    \"zh-CN\": \"下载字典失败，请刷新页面重试\",\n    \"zh-TW\": \"下載字典失敗，請刷新頁面重試\"\n};\n\nexport const downloadingDictionary = {\n    \"en-US\": `Downloading Dictionary...`,\n    \"zh-CN\": `正在下载字典...`,\n    \"zh-TW\": `正在下載字典...`\n};\n\nexport const pdfNoTableOfContent = {\n    \"en-US\": \"No Table Of Contents\",\n    \"zh-CN\": \"没有章节信息\",\n    \"zh-TW\": \"沒有章節信息\"\n};\n\nexport const pdfSelectChapter = {\n    \"en-US\": \"Select Chapter\",\n    \"zh-CN\": \"选择章节\",\n    \"zh-TW\": \"選擇章節\"\n};","import { PDFExtractor, Chapter, concatText } from \"./pdf_extractor\";\nimport React from 'react';\nimport * as multilaanguage from \"./multilanguage\";\nimport { i18n } from \"./internationlization\";\n\nexport abstract class FileTextExtractor {\n    abstract extract(callback: (text: string | null) => void): void\n}\n\nexport class TextFileTextExtractor extends FileTextExtractor {\n    file: File\n    constructor(file: File) {\n        super();\n        this.file = file;\n    }\n\n    extract(callback: (text: string | null) => void): void {\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            const result = fileReader.result;\n            if (typeof result === \"string\") {\n                callback(result);\n            } else {\n                callback(null);\n            }\n        }\n        fileReader.readAsText(this.file);\n    }\n}\n\nexport class PDFFileTextExtractor extends FileTextExtractor {\n    file: File\n    fromPage: number\n    toPage: number\n\n    constructor(file: File, fromPage: number, toPage: number) {\n        super();\n        this.file = file;\n        this.fromPage = fromPage;\n        this.toPage = toPage;\n    }\n\n    openPDFFile(callback: (pdf: PDFExtractor | null) => any) {\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            const result = fileReader.result;\n            if (result instanceof ArrayBuffer) {\n                const pdfExtractor = new PDFExtractor(result);\n                callback(pdfExtractor);\n            } else {\n                callback(null);\n            }\n        }\n        fileReader.readAsArrayBuffer(this.file);\n\n    }\n\n    extract(callback: (text: string | null) => void): void {\n        this.openPDFFile(pdfExtractor => {\n            if (pdfExtractor === null) {\n                callback(null);\n            } else {\n                console.log(Array.from({ length: this.toPage - (this.fromPage - 1) }, (v, k) => k + this.fromPage - 1))\n                Array.from({ length: this.toPage - (this.fromPage - 1) }, (v, k) => k + this.fromPage - 1)\n                    .reduce(async (prevPages, pageNumber) => {\n                        const prevPageText: string = await prevPages;\n                        console.log(prevPages);\n                        const thisPageText: string = await pdfExtractor.extractOnePage(pageNumber);\n                        return concatText(prevPageText, thisPageText);\n                    }, Promise.resolve(\"\")).then(t => callback(t))\n            }\n        })\n    }\n}\n\ninterface ExtractorControllerProps {\n    file: File\n    setExtractor: (extractor: FileTextExtractor) => void\n}\n\nexport const TextFileTextExtractorController: React.FunctionComponent<ExtractorControllerProps> = ({ file, setExtractor }) => {\n    setExtractor(new TextFileTextExtractor(file))\n    return null;\n}\n\ninterface PDFInfo {\n    outline: Chapter[]\n    numPages: number\n}\n\nexport class PDFFileTextExtractorController extends React.Component<ExtractorControllerProps, {\n    pdfInfo: PDFInfo | null,\n    pageRange: [number, number] | null,\n    pageRangeSafe: [number, number] | null,\n    badFile: boolean,\n    chapterSelectedIdx: number | null\n}>  {\n    constructor(props: ExtractorControllerProps) {\n        super(props);\n        this.state = {\n            pdfInfo: null,\n            pageRange: null,\n            pageRangeSafe: null,\n            chapterSelectedIdx: null,\n            badFile: false\n        };\n        this.updateToSafePageRange = this.updateToSafePageRange.bind(this);\n    }\n\n    componentDidMount() {\n        this.readPDF();\n    }\n    componentDidUpdate(prevProps: ExtractorControllerProps) {\n        if (prevProps.file !== this.props.file) {\n            this.readPDF();\n        }\n    }\n    readPDF() {\n        new PDFFileTextExtractor(this.props.file, 0, 0).openPDFFile(pdfExtractor => {\n            if (pdfExtractor === null) {\n                this.setState({ badFile: true })\n            } else {\n                Promise.all([\n                    pdfExtractor.extractOutline(),\n                    pdfExtractor.numPages()\n                ]).then(outlineAndNumPage => {\n                    this.setState({\n                        pdfInfo: { outline: outlineAndNumPage[0], numPages: outlineAndNumPage[1] },\n                        pageRange: [1, outlineAndNumPage[1]]\n                    })\n                    this.props.setExtractor(new PDFFileTextExtractor(this.props.file, 1, outlineAndNumPage[1]))\n                })\n            }\n        })\n    }\n\n    updatePageRange(fromPage: number, toPage: number): void {\n        if (this.state.pdfInfo !== null) {\n            const safeFromPage = Math.max(1, Math.min(fromPage, this.state.pdfInfo.numPages))\n            const safeToPage = Math.min(this.state.pdfInfo.numPages, Math.max(fromPage, toPage))\n            this.setState({\n                pageRange: [fromPage, toPage],\n                pageRangeSafe: [safeFromPage, safeToPage]\n            });\n            this.props.setExtractor(new PDFFileTextExtractor(this.props.file, safeFromPage, safeToPage));\n        }\n    }\n\n    updateToSafePageRange() {\n        if (this.state.pageRangeSafe !== null) {\n            this.setState({ pageRange: this.state.pageRangeSafe });\n        }\n    }\n\n    render() {\n        if (this.state.badFile) {\n            return <p>Bad PDF FILE</p>\n        } else if (this.state.pdfInfo === null && !this.state.badFile) {\n            return <p>LOADING PDF FILE</p>\n        } else if (this.state.pageRange !== null && this.state.pdfInfo !== null) {\n            return <div className=\"row mt-1\">\n                <div className=\"col-2 pl-0 pr-1\">\n                    <div className=\"form-group\">\n                        <label className=\"mb-1 ml-1 small text-nowrap\">\n                            Page From\n                        </label>\n                        <input type=\"number\" className=\"form-control\" placeholder=\"Page From\" value={this.state.pageRange[0]}\n                            onBlur={this.updateToSafePageRange}\n                            onChange={event => { this.state.pageRange !== null && this.updatePageRange(parseInt(event.target.value), this.state.pageRange[1]) }} />\n                    </div>\n                </div>\n                <div className=\"col-2 pl-0 pr-1\">\n                    <div className=\"form-group\">\n                        <label className=\"mb-1 ml-1 small text-nowrap\">\n                            Page To\n                        </label>\n                        <input type=\"number\" className=\"form-control\" placeholder=\"Page To\" value={this.state.pageRange[1]}\n                            onBlur={this.updateToSafePageRange}\n                            onChange={event => { this.state.pageRange !== null && this.updatePageRange(this.state.pageRange[0], parseInt(event.target.value)) }} />\n                    </div>\n                </div>\n                <div className=\"col-8 pl-0 pr-0\">\n                    <div className=\"form-group\">\n                        <label className=\"mb-1 ml-1 small text-nowrap\">\n                            Chapter\n                        </label>\n                        <select className=\"form-control\" value={\n                            this.state.chapterSelectedIdx === null ||\n                                this.state.pageRange[0] !== this.state.pdfInfo.outline[this.state.chapterSelectedIdx].pageIndex + 1 ||\n                                this.state.pageRange[1] !== this.state.pdfInfo.outline[this.state.chapterSelectedIdx].pageIndex + this.state.pdfInfo.outline[this.state.chapterSelectedIdx].numPages ?\n                                -1 : this.state.chapterSelectedIdx\n                        } onChange={event => {\n                            const value: number = parseInt(event.target.value);\n                            if (value === -1) {\n                                this.setState({\n                                    chapterSelectedIdx: null\n                                })\n                            } else if (this.state.pdfInfo !== null) {\n                                const chapter = this.state.pdfInfo.outline[value];\n                                this.setState(\n                                    {\n                                        chapterSelectedIdx: value,\n                                    }\n                                );\n                                console.log(chapter);\n                                this.updatePageRange(chapter.pageIndex + 1, chapter.pageIndex + 1 + chapter.numPages - 1);\n                            }\n                        }}>\n                            {this.state.pdfInfo.outline.length === 0 && <option value={-1}>{i18n(multilaanguage.pdfNoTableOfContent)}</option>}\n                            {this.state.pdfInfo.outline.length > 0 && <option value={-1}>{i18n(multilaanguage.pdfSelectChapter)}</option>}\n                            {this.state.pdfInfo.outline.map((chapter, idx) => {\n                                return <option key={idx} value={idx}>{chapter.title}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n            </div >\n        }\n    }\n\n}\n","export class Dictionary {\n  dictionary: { [word: string]: string }\n\n  constructor(dict: { [word: string]: string }) {\n    this.dictionary = dict;\n    this.define = this.define.bind(this);\n  }\n\n  define(word: string): string {\n    if (this.dictionary.hasOwnProperty(word)) {\n      return this.dictionary[word];\n    } else {\n      return \"\"\n    }\n  }\n}\n\nexport interface DictionaryLibraryStatus {\n  selected: string | null;\n  dictionaryStatus: {\n    [lang: string]: \"Ready\" | \"Downloading\" | \"Error\" | \"NotDownloaded\"\n  }\n}\n\nexport class DictionaryLibrary {\n  dictionaryLibrary: {\n    [lang: string]: {\n      dictionary: Dictionary | null,\n      status: \"Ready\" | \"Downloading\" | \"Error\" | \"NotDownloaded\",\n    }\n  }\n  selected: string | null\n  updateDictionaryLibraryStatus: (dls: DictionaryLibraryStatus) => void\n  constructor(updateDictionaryLibraryStatusFunc: (dls: DictionaryLibraryStatus) => void) {\n    this.dictionaryLibrary = {};\n    this.selected = null;\n    this.dictionaryLibrary = {\n      \"zh-CN\": { dictionary: null, status: \"NotDownloaded\" }\n    }\n    this.updateDictionaryLibraryStatus = updateDictionaryLibraryStatusFunc;\n    this.downloadDictionary = this.downloadDictionary.bind(this);\n    this.dictionaryLibraryStatus = this.dictionaryLibraryStatus.bind(this);\n    this.select = this.select.bind(this);\n  }\n\n  dictionaryLibraryStatus(): DictionaryLibraryStatus {\n    const dls: DictionaryLibraryStatus = { selected: this.selected, dictionaryStatus: {} };\n    for (const lang in this.dictionaryLibrary) {\n      dls.dictionaryStatus[lang] = this.dictionaryLibrary[lang].status;\n    }\n    return dls\n  }\n\n  unselect(): void {\n    this.selected = null;\n    this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n  }\n\n  select(lang: string): void {\n    if (this.dictionaryLibrary.hasOwnProperty(lang)) {\n      this.selected = lang;\n      this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n      this.downloadDictionary(lang);\n    }\n  }\n\n  getDictionary(): Dictionary | null {\n    if (this.selected !== null) {\n      return this.dictionaryLibrary[this.selected].dictionary;\n    } else {\n      return null;\n    }\n  }\n\n  downloadDictionary(language: string) {\n    if (this.dictionaryLibrary.hasOwnProperty(language) && this.dictionaryLibrary[language].status !== \"Ready\") {\n      const thisDictionary = this.dictionaryLibrary[language]\n      thisDictionary.status = \"Downloading\";\n      this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n      let dictionaryModulePromise = null;\n      if (language === \"zh-CN\") {\n        dictionaryModulePromise = import(\"./dictionaries/dictionary.zh-CN.json\");\n      }\n      dictionaryModulePromise?.then(\n        dictionary => {\n          thisDictionary.status = \"Ready\";\n          thisDictionary.dictionary = new Dictionary(dictionary.default);\n          this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n        })\n        .catch(error => {\n          thisDictionary.status = \"Error\";\n          this.updateDictionaryLibraryStatus(this.dictionaryLibraryStatus());\n        })\n    }\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Tokenizer, Lemmatizer, Fractionator } from './fractionator'\nimport demoText from './a_farewell_to_arms.json'\nimport { Internationalization, i18n } from './internationlization';\nimport { PDFFileTextExtractorController, FileTextExtractor, TextFileTextExtractorController } from './file_text_extractor';\nimport { DictionaryLibrary, DictionaryLibraryStatus } from \"./dictionary\";\nimport * as multilaanguage from \"./multilanguage\";\n\ninterface GeneralAppComponentProps {\n  setStage: (stage: AppStage) => void;\n  setInput: (input: string) => void\n}\n\ninterface FullAccessAppComponentProps {\n  setStage: (stage: AppStage) => void;\n  setInput: (input: string) => void\n  getInput: () => string;\n}\n\nconst RequestForInput: React.FunctionComponent<GeneralAppComponentProps> = ({ setStage, setInput }) =>\n  <React.Fragment>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"mb-1\">\n          {i18n(multilaanguage.desc)}\n        </p>\n        <p className=\"mb-1\">\n          {i18n(multilaanguage.instruction)}\n        </p>\n        <p className=\"mb-1\">\n          {i18n(multilaanguage.privacyStatement)}\n          <a href=\"https://github.com/tetrau/fractionator\">\n            {i18n(multilaanguage.homePageLink)}\n          </a>\n        </p>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForText\"); setInput(demoText) }}>{i18n(multilaanguage.demoBtn)}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setStage(\"RequestForText\")}>{i18n(multilaanguage.pasteTextBtn)}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setStage(\"RequestForFile\")}>{i18n(multilaanguage.chooseFileBtn)}</button>\n      </div>\n    </div>\n  </React.Fragment>\n\nconst RequestForText: React.FunctionComponent<FullAccessAppComponentProps> = ({ setStage, getInput, setInput }) =>\n  <React.Fragment>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <textarea style={{ height: window.innerHeight * 0.5 }} className=\"form-control mb-1\" placeholder={i18n(multilaanguage.pasteTextHere)} value={getInput()} onChange={e => setInput(e.target.value)} ></textarea>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForInput\"); setInput(\"\") }}>{i18n(multilaanguage.returnBtn)}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { setStage(\"RequestForFile\"); setInput(\"\") }}>{i18n(multilaanguage.chooseFileBtn)}</button>\n        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => setStage(\"ResultDisplay\")}>{i18n(multilaanguage.fractionateBtn)}</button>\n      </div>\n    </div>\n  </React.Fragment>\n\nclass RequestForFile extends React.Component<GeneralAppComponentProps, { file: File | null }> {\n  inputFileRef: React.RefObject<HTMLInputElement>\n  extractor: null | FileTextExtractor\n  constructor(props: GeneralAppComponentProps) {\n    super(props);\n    this.handleFileChoosed = this.handleFileChoosed.bind(this);\n    this.gotoResultDisplay = this.gotoResultDisplay.bind(this);\n    this.inputFileRef = React.createRef();\n    this.state = { file: null };\n    this.extractor = null\n  }\n\n  handleFileChoosed(): void {\n    const input = this.inputFileRef.current;\n    if (input && input.files !== null && input.files.length > 0) {\n      const file: File = input.files[0];\n      this.setState({ file: file });\n    }\n  }\n\n  gotoResultDisplay(): void {\n    if (this.extractor !== null) {\n      this.extractor.extract((text) => {\n        if (text !== null) {\n          this.props.setInput(text);\n          this.props.setStage(\"ResultDisplay\");\n        }\n      })\n    }\n  }\n\n  render() {\n    return <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"row\">\n          <div className=\"col-12 d-flex justify-content-center\">\n            <div className=\"form-group\">\n              <input type=\"file\" className=\"form-control-file\" onChange={this.handleFileChoosed} accept=\".txt,.srt,.pdf\" ref={this.inputFileRef} />\n              {this.state.file !== null && this.state.file.name.toLowerCase().endsWith(\".pdf\") &&\n                <PDFFileTextExtractorController file={this.state.file} setExtractor={(e) => this.extractor = e} />}\n              {this.state.file !== null && !this.state.file.name.toLowerCase().endsWith(\".pdf\") &&\n                <TextFileTextExtractorController file={this.state.file} setExtractor={(e) => this.extractor = e} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 d-flex justify-content-center\">\n            <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { this.props.setStage(\"RequestForInput\"); this.props.setInput(\"\") }}>{i18n(multilaanguage.returnBtn)}</button>\n            <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => { this.props.setStage(\"RequestForText\"); this.props.setInput(\"\") }}>{i18n(multilaanguage.pasteTextBtn)}</button>\n            <button type=\"button\" className=\"btn btn-outline-danger\" onClick={this.gotoResultDisplay}>{i18n(multilaanguage.fractionateBtn)}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  }\n}\n\nclass WordDisplay extends React.Component<{ word: string, meaning: string }, { translate: boolean }> {\n  constructor(props: { word: string, meaning: string }) {\n    super(props);\n    this.state = { translate: false };\n    this.handleDoubleClick = this.handleDoubleClick.bind(this);\n  }\n\n  handleDoubleClick() {\n    this.setState({ translate: !this.state.translate });\n  }\n\n  render() {\n    if (this.state.translate) {\n      return <p className=\"mb-1 w-100\" onDoubleClick={this.handleDoubleClick}>\n        <strong>{`${this.props.word}`}</strong>\n        {`: ${this.props.meaning}`}\n      </p>\n    } else {\n      return <span onDoubleClick={this.handleDoubleClick} className=\"mr-1\">{`${this.props.word} `}</span>\n    }\n  }\n}\n\nconst ResultDisplay: React.FunctionComponent<{\n  setStage: (stage: AppStage) => void,\n  setInput: (input: string) => void,\n  getInput: () => string,\n  dictionaryLibrary: DictionaryLibrary\n}> = ({ setStage, getInput, setInput, dictionaryLibrary }) => {\n  const tokens = new Tokenizer().tokenize(getInput());\n  const lemmas = new Lemmatizer().lemmatize(tokens);\n  const distillates = new Fractionator().fractionate(lemmas);\n  function displayWords(words: string[], neverTranslate: boolean): React.ReactNode[] {\n    if (dictionaryLibrary.selected !== null\n      && !neverTranslate\n      && dictionaryLibrary.dictionaryLibrary[dictionaryLibrary.selected].status === \"Ready\") {\n      return words.map(word => {\n        let meaning: string = \"\"\n        const dictionary = dictionaryLibrary.getDictionary()\n        if (dictionary !== null) {\n          meaning = dictionary.define(word);\n        }\n        return <WordDisplay key={word} word={word} meaning={meaning} />;\n      });\n    } else {\n      return [<p className=\"text-center\" key={`distillate-Unknown`}>{words.join(\" \")}</p>]\n    }\n  }\n  function DoubleClickDefineOption(text: string, language: string): string {\n    const dictionaryStatus = dictionaryLibrary.dictionaryLibrary[language].status;\n    if (dictionaryStatus === \"Ready\" || dictionaryStatus === \"NotDownloaded\") {\n      return text;\n    } else if (dictionaryStatus === \"Downloading\") {\n      return i18n(multilaanguage.downloadingDictionary);\n    } else {\n      return i18n(multilaanguage.dictionaryDownloadFailed);\n    }\n  }\n  const display = distillates.flatMap(\n    ({ category, distillate }) => {\n      if (distillate.length === 0) {\n        return []\n      } else {\n        return [\n          <div className=\"d-flex justify-content-center flex-wrap\" key={`words-${category}`}>\n            {displayWords(distillate, category === \"Unknown\")}\n          </div>,\n          <div className=\"separator\" key={`separator-${category}`}>{category}</div>\n        ];\n      }\n    }\n  ).reverse();\n  return <React.Fragment>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        {display}\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-12 d-flex justify-content-center flex-wrap\">\n        <button type=\"button\" className=\"btn btn-outline-primary mt-1 mb-1\" onClick={() => { setStage(\"RequestForInput\"); setInput(\"\") }}>{i18n(multilaanguage.returnBtn)}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary mt-1 mb-1\" onClick={() => { setStage(\"RequestForText\"); setInput(\"\") }}>{i18n(multilaanguage.pasteTextBtn)}</button>\n        <button type=\"button\" className=\"btn btn-outline-primary mt-1 mb-1\" onClick={() => { setStage(\"RequestForFile\"); setInput(\"\") }}>{i18n(multilaanguage.chooseFileBtn)}</button>\n        <div className=\"form-group mt-1 mb-1\">\n          <select className=\"form-control w-auto\" value={dictionaryLibrary.selected === null ? \"\" : dictionaryLibrary.selected} onChange={(event) => {\n            const value = event.target.value;\n            if (value === \"\") {\n              dictionaryLibrary.unselect();\n            } else {\n              dictionaryLibrary.select(event.target.value)\n            }\n          }}>\n            <option value=\"\">\n              {i18n(multilaanguage.dictionaryOff)}\n            </option>\n            <option value=\"zh-CN\">\n              {DoubleClickDefineOption(i18n(multilaanguage.dictionaryChineseOn), \"zh-CN\")}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </React.Fragment >\n}\n\ntype AppStage = \"RequestForInput\" | \"RequestForText\" | \"ResultDisplay\" | \"RequestForFile\"\n\nclass App extends React.Component<{}, {\n  stage: AppStage;\n  input: string;\n  dictionaryLibraryStatus: DictionaryLibraryStatus\n}> {\n  dictionaryLibrary: DictionaryLibrary\n  constructor(props: any) {\n    super(props);\n    this.dictionaryLibrary = new DictionaryLibrary(\n      (newDictionaryLibraryStatus) => this.setState({ dictionaryLibraryStatus: newDictionaryLibraryStatus })\n    );\n    let dictionaryLanguage = new Internationalization().getLanugage();\n    dictionaryLanguage = dictionaryLanguage === \"zh-TW\" ? \"zh-CN\" : dictionaryLanguage\n    this.dictionaryLibrary.downloadDictionary(dictionaryLanguage);\n    this.state = {\n      stage: \"RequestForInput\",\n      input: \"\",\n      dictionaryLibraryStatus: this.dictionaryLibrary.dictionaryLibraryStatus()\n    };\n    this.setStage = this.setStage.bind(this);\n    this.setInput = this.setInput.bind(this);\n    this.getInput = this.getInput.bind(this);\n  }\n\n  setStage(stage: AppStage): void {\n    this.setState({ \"stage\": stage });\n  }\n\n  setInput(input: string): void {\n    this.setState({ \"input\": input });\n  }\n\n  getInput(): string {\n    return this.state.input;\n  }\n\n  render() {\n    return <div className=\"d-flex align-items-center min-vh-100\">\n      <div className=\"container\">\n        {this.state.stage === \"RequestForInput\" && <RequestForInput setStage={this.setStage} setInput={this.setInput} />}\n        {this.state.stage === \"RequestForText\" && <RequestForText setStage={this.setStage} getInput={this.getInput} setInput={this.setInput} />}\n        {this.state.stage === \"ResultDisplay\" && <ResultDisplay dictionaryLibrary={this.dictionaryLibrary} setStage={this.setStage} getInput={this.getInput} setInput={this.setInput} />}\n        {this.state.stage === \"RequestForFile\" && <RequestForFile setStage={this.setStage} setInput={this.setInput} />}\n      </div>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (process.env.REACT_APP_PAGE_VIEW_COUNT_URL) {\n  fetch(process.env.REACT_APP_PAGE_VIEW_COUNT_URL);\n}\n\nserviceWorker.register();\n"],"sourceRoot":""}